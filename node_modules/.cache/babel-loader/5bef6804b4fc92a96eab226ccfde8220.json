{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Pramod Satya D\\\\Desktop\\\\sliceline-firebase\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nconst auth = window.firebase.auth();\nconst provider = new window.firebase.auth.GoogleAuthProvider();\nexport function useAuthentication() {\n  const _useState = useState('loading'),\n        _useState2 = _slicedToArray(_useState, 2),\n        authenticated = _useState2[0],\n        setAuthenticated = _useState2[1];\n\n  function login() {\n    auth.signInWithPopup(provider);\n  }\n\n  function logout() {\n    auth.signOut().then(function () {// Sign-out successful.\n    }).catch(function (error) {// An error happened.\n    });\n  }\n\n  useEffect(() => {\n    auth.onAuthStateChanged(function (user) {\n      if (user) {\n        setAuthenticated(user);\n      } else {\n        setAuthenticated();\n      }\n    }, function (error) {\n      console.log(error);\n    });\n  }, []);\n  return {\n    login,\n    logout,\n    loggedIn: authenticated\n  };\n}","map":{"version":3,"sources":["C:/Users/Pramod Satya D/Desktop/sliceline-firebase/src/Hooks/useAuthentication.js"],"names":["useEffect","useState","auth","window","firebase","provider","GoogleAuthProvider","useAuthentication","authenticated","setAuthenticated","login","signInWithPopup","logout","signOut","then","catch","error","onAuthStateChanged","user","console","log","loggedIn"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,MAAMC,IAAI,GAAGC,MAAM,CAACC,QAAP,CAAgBF,IAAhB,EAAb;AACA,MAAMG,QAAQ,GAAG,IAAIF,MAAM,CAACC,QAAP,CAAgBF,IAAhB,CAAqBI,kBAAzB,EAAjB;AAEA,OAAO,SAASC,iBAAT,GAA6B;AAAA,oBACQN,QAAQ,CAAC,SAAD,CADhB;AAAA;AAAA,QAC3BO,aAD2B;AAAA,QACZC,gBADY;;AAGlC,WAASC,KAAT,GAAgB;AACdR,IAAAA,IAAI,CAACS,eAAL,CAAqBN,QAArB;AACD;;AAED,WAASO,MAAT,GAAkB;AAChBV,IAAAA,IAAI,CACHW,OADD,GAECC,IAFD,CAEM,YAAW,CACf;AACD,KAJD,EAKCC,KALD,CAKO,UAASC,KAAT,EAAgB,CACrB;AACD,KAPD;AAQD;;AAEDhB,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,IAAI,CAACe,kBAAL,CAAwB,UAASC,IAAT,EAAc;AACpC,UAAGA,IAAH,EAAQ;AACNT,QAAAA,gBAAgB,CAACS,IAAD,CAAhB;AACD,OAFD,MAEK;AACHT,QAAAA,gBAAgB;AACjB;AACF,KAND,EAMG,UAASO,KAAT,EAAe;AAChBG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACD,KARD;AASD,GAVQ,EAUN,EAVM,CAAT;AAYA,SAAO;AAACN,IAAAA,KAAD;AAAQE,IAAAA,MAAR;AAAgBS,IAAAA,QAAQ,EAAEb;AAA1B,GAAP;AACD","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst auth = window.firebase.auth();\nconst provider = new window.firebase.auth.GoogleAuthProvider();\n\nexport function useAuthentication() {\n  const [authenticated, setAuthenticated] = useState('loading');\n\n  function login(){\n    auth.signInWithPopup(provider);\n  }\n\n  function logout() {\n    auth\n    .signOut()\n    .then(function() {\n      // Sign-out successful.\n    })\n    .catch(function(error) {\n      // An error happened.\n    });\n  }\n\n  useEffect(() => {\n    auth.onAuthStateChanged(function(user){\n      if(user){\n        setAuthenticated(user);\n      }else{\n        setAuthenticated();\n      }\n    }, function(error){\n      console.log(error);\n    });\n  }, []);\n\n  return {login, logout, loggedIn: authenticated};\n}\n"]},"metadata":{},"sourceType":"module"}